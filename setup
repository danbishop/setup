#!/bin/bash

# Get Ubuntu codename, e.g. jammy, dapper, warty, etc.
if [[ -r /etc/os-release ]]; then
    . /etc/os-release
    if [[ $ID = ubuntu ]]; then
        echo "Running $UBUNTU_CODENAME"
    else
        echo "Not running an Ubuntu distribution. ID=$ID, VERSION=$VERSION"
    fi
else
    echo "Not running a distribution with /etc/os-release available"
fi

# Install bitwarden-cli
sudo snap install bw

# Login
if bw login --check ; then
  echo "BitWarden is logged in."
  if bw_unlock=$(bw unlock | grep 'export') ; then
    eval "${bw_unlock:2}"
  else
    echo "Failed to unlock BitWarden. Wrong password?. Try again."
    exit 1
  fi
elif bw_login=$(bw login | grep 'export') ; then
  # Log in to BitWarden CLI (ignore '$ ' that precedes export command)
  eval "${bw_login:2}"
else
  echo "Failed to login to BitWarden. Start again."
  exit 1
fi

# Get id_rsa and id_rsa.pub from BW
bw get notes c8c5dca7-aad6-4bd7-8df1-af29010dbf43 > ~/.ssh/id_rsa.pub
chmod 600 ~/.ssh/id_rsa.pub
bw get notes aafebb4e-10a3-45bf-9f50-af29010d7a59 > ~/.ssh/id_rsa
chmod 600 ~/.ssh/id_rsa

# Get backup key
export PASSPHRASE="$(bw get notes "Backup: $HOSTNAME")"
export FTP_PASSWORD="$(bw get password cloud.danbishop.uk)"
# Restore backup
duplicity restore --force webdavs://dan@cloud.danbishop.uk/remote.php/webdav/Backup%20and%20Recovery/$HOSTNAME ~/tmp
mv -f ~/tmp/home/$USER ~
rm -rf ~/tmp

# Correct icon sizes
gsettings set org.gnome.nautilus.icon-view default-zoom-level 'medium'
# Show seconds on clock
gsettings set org.gnome.desktop.interface clock-show-seconds true
# Set desktop
gsettings set org.gnome.desktop.background picture-uri "file:///usr/share/backgrounds/contest/$UBUNTU_CODENAME.xml"
# Enable dark mode
gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
gsettings set org.gnome.desktop.interface gtk-theme 'Yaru-dark'

# Update apt
sudo apt-get update > /dev/null 2>&1
sudo apt-get dist-upgrade -y > /dev/null 2>&1

# Install apt packages
sudo apt-get install -y deja-dup git curl ssh build-essential ruby ruby-dev

# Backup Settings
gsettings set org.gnome.DejaDup backend 'remote'
gsettings set org.gnome.DejaDup delete-after 182
gsettings set org.gnome.DejaDup exclude-list ['$TRASH', '$DOWNLOAD']
gsettings set org.gnome.DejaDup full-backup-period 90
gsettings set org.gnome.DejaDup include-list "['$HOME/Videos', '$HOME/Templates', '$HOME/Public', '$HOME/Pictures', '$HOME/Obsidian', '$HOME/FiraxisLive', '$HOME/Documents', '$HOME/.vscode', '$HOME/.steam', '$HOME/.ssh', '$HOME/.gnupg', '$HOME/snap/firefox', '$HOME/snap/bitwarden', '$HOME/.local/share/keyrings', '$HOME/.config/goa-1.0']"
gsettings set org.gnome.DejaDup periodic true
gsettings set org.gnome.DejaDup periodic-period 7
gsettings set org.gnome.DejaDup prompt-check 'disabled'
gsettings set org.gnome.DejaDup tool 'duplicity'
gsettings set org.gnome.DejaDup.Drive folder '$HOSTNAME'
gsettings set org.gnome.DejaDup.Remote folder '$HOSTNAME'
gsettings set org.gnome.DejaDup.Remote uri 'davs://dan@cloud.danbishop.uk/remote.php/webdav/Backup%20and%20Recovery'

# Install VSCode
sudo snap install code --classic > /dev/null 2>&1

# Install other snaps
sudo snap install spotify kita slack openttd warzone2100 bitwarden > /dev/null 2>&1

# Install Zoom and keep it up to date
sudo mkdir /opt/zoom-updater > /dev/null 2>&1
sudo cp ./files/zoom-update.sh /opt/zoom-updater/zoom-update.sh > /dev/null 2>&1
sudo chmod +x /opt/zoom-updater/zoom-update.sh > /dev/null 2>&1

sudo cp ./files/zoom-update.timer /etc/systemd/system/zoom-update.timer
sudo cp ./files/zoom-update.service /etc/systemd/system/zoom-update.service

sudo systemctl enable --now zoom-update.timer
sudo systemctl start zoom-update.service


# Set gitconfig
cp ./files/.gitconfig ~/

# Set dock favourites
gsettings set org.gnome.shell favorite-apps "['firefox_firefox.desktop', 'org.gnome.Nautilus.desktop', 'rhythmbox.desktop', 'snap-store_ubuntu-software.desktop', 'code_code.desktop', 'spotify_spotify.desktop', 'org.gnome.Terminal.desktop', 'Zoom.desktop']"

# Hide files
echo 'snap' >> ~/.hidden

# Create Prokects folder if not exist
mkdir -p ~/Projects

# Clone some git repos
if [ ! -d "~/Projects/setup" ]; then
  git -C ~/Projects clone git@github.com:danbishop/setup.git
fi
if [ ! -d "~/Projects/setup" ]; then
  git -C ~/Projects clone git@github.com:danbishop/server-setup.git
fi
if [ ! -d "~/Projects/setup" ]; then
  git -C ~/Projects clone git@github.com:danbishop/danbishop.uk.git
fi

# Finished
echo "All done ðŸ™‚"
